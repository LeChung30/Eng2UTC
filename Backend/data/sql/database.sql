CREATE TABLE [CERT_LEVEL] (
  [CERT_LEVEL_ID] VARCHAR(100), --primary key
  [LEVEL_NAME] NVARCHAR(100),
  [DESCRIPTION] NVARCHAR(1000),
  [IMAGE_LINK] VARCHAR(100)
);

CREATE TABLE [TEST_TYPE] (
  [TEST_TYPE_ID] VARCHAR(100),--primary key
  [NAME_OF_TEST_TYPE] NVARCHAR(2000),
  [TOTAL_DURATION] INT,
  [MAXIMUM_SCORE] FLOAT,
  [CERT_LEVEL_ID] VARCHAR(100),
  CONSTRAINT [FK_TEST_TYPE.CERT_LEVEL_ID]
    FOREIGN KEY ([CERT_LEVEL_ID])
      REFERENCES [CERT_LEVEL]([CERT_LEVEL_ID])
);

CREATE TABLE [PART_OF_TEST] (
  [PART_OF_TEST_ID] VARCHAR(100),--primary key
  [NAME_OF_PART] NVARCHAR(100),
  [TEST_TYPE_ID] VARCHAR(100),
  [AUDIO_LINK] VARCHAR(1000),
  CONSTRAINT [FK_PART_OF_TEST.TEST_TYPE_ID]
    FOREIGN KEY ([TEST_TYPE_ID])
      REFERENCES [TEST_TYPE]([TEST_TYPE_ID])
);

CREATE TABLE [QUESTION_CONTENT] (
  [QUESTION_CONTENT_ID] VARCHAR(100),--primary key
  [CONTENT] NVARCHAR(2000),
  [IMAGE_LINK] VARCHAR(1000),
  [AUDIO_LINK] VARCHAR(1000)
);

CREATE TABLE [PART_QUESTION_TYPE] (
  [QUESTION_TYPE_ID] VARCHAR(100),--primary key
  [PART_OF_TEST_ID] NVARCHAR(2000),--primary key
  [QUANTITY] INT
);

CREATE TABLE [TEST] (
  [TEST_ID] VARCHAR(100),--primary key
  [NAME_OF_TEST] VARCHAR(100),
  [TEST_TYPE_ID] VARCHAR(100),
  CONSTRAINT [FK_TEST.TEST_TYPE_ID]
    FOREIGN KEY ([TEST_TYPE_ID])
      REFERENCES [TEST_TYPE]([TEST_TYPE_ID])
);

CREATE TABLE [USER] (
  [USER_ID] VARCHAR(100),--primary key
  [EMAIL] NVARCHAR(100),
  [USER_NAME] NVARCHAR(100),
  [FIRST_NAME] NVARCHAR(100),
  [LAST_NAME] NVARCHAR(100),
  [GENDER] NVARCHAR(20),
  [IS_ACTIVE] BIT,
  [CREATED_DATE] DATETIME,
  [IMAGE_LINK] VARCHAR(1000),
  [HASH_PASSWORD] VARBINARY(255)
);

CREATE TABLE [DATE_ATTENDING] (
  [DATE_ATTEND] DATE,--primary key
  [USER_ID] VARCHAR(100),--primary key
  [STREAK] INT,
  [DURATION] INT,
  CONSTRAINT [FK_DATE_ATTENDING.USER_ID]
    FOREIGN KEY ([USER_ID])
      REFERENCES [USER]([USER_ID])
);

CREATE TABLE [TOPIC] (
  [TOPIC] VARCHAR(100),--primary key
  [NAME_OF_TOPIC] NVARCHAR(2000)
  [DESCRIPTION] NVARCHAR(2000),
  [IMAGE_LINK] VARCHAR(1000),
);

CREATE TABLE [GRAMMAR] (
  [GRAMMAR_ID] VARCHAR(100),--primary key
  [CONTENT_LINK] VARCHAR(2000),
  [CERT_LEVEL_ID] VARCHAR(100),
  CONSTRAINT [FK_GRAMMAR.CERT_LEVEL_ID]
    FOREIGN KEY ([CERT_LEVEL_ID])
      REFERENCES [CERT_LEVEL]([CERT_LEVEL_ID])
);

CREATE TABLE [LESSON] (
  [LESSON_ID] VARCHAR(100),--primary key
  [NAME_OF_LESSON] NVARCHAR(100),
  [CERT_LEVEL_ID] VARCHAR(100),
  [IS_VOCAB] BIT,
  [PREVIOUS_LESSON] VARCHAR(100),
  [TOPIC_ID] VARCHAR(100),
  CONSTRAINT [FK_LESSON.TOPIC_ID]
    FOREIGN KEY ([TOPIC_ID])
      REFERENCES [TOPIC]([TOPIC_ID]),
  CONSTRAINT [FK_LESSON.LESSON_ID]
    FOREIGN KEY ([LESSON_ID])
      REFERENCES [GRAMMAR]([GRAMMAR_ID])
);

CREATE TABLE [USER_VOCAB] (
  [USER_ID] VARCHAR(100),--primary key
  [VOCAB_ID] VARCHAR(100),--primary key
  [MEMORY_LEVEL] INT,
  [STATUS] NVARCHAR(50),
  [USER_NOTION] NVARCHAR(1000),
  [PRIORITY] BIT
);

CREATE TABLE [VOCABULARY] (
  [VOCAB_ID] VARCHAR(100),--primary key
  [WORD] VARCHAR(100),
  [PRONUNCIATION] NVARCHAR(100),
  [PART_OF_SPEECH] NVARCHAR(100),
  [IMAGE_LINK] VARCHAR(1000),
  [AUDIO_LINK] VARCHAR(1000),
  [MEANING] NVARCHAR(1000),
  [CERT_LEVEL_ID] VARCHAR(100),
  [LESSON_ID] VARCHAR(100)
);

CREATE TABLE [VOCAB_QUESTION] (
  [QUESTION_ID] VARCHAR(100),--primary key
  [VOCAB_ID] VARCHAR(100),--primary key
  CONSTRAINT [FK_VOCAB_QUESTION.VOCAB_ID]
    FOREIGN KEY ([VOCAB_ID])
      REFERENCES [VOCABULARY]([VOCAB_ID])
);



CREATE TABLE [QUESTION_TYPE] (
  [QUESTION_TYPE_ID] VARCHAR(100),--primary key
  [NAME_OF TYPE] NVARCHAR(2000),
  CONSTRAINT [FK_QUESTION_TYPE.QUESTION_TYPE_ID]
    FOREIGN KEY ([QUESTION_TYPE_ID])
      REFERENCES [PART_QUESTION_TYPE]([QUESTION_TYPE_ID])
);

CREATE TABLE [QUESTION] (
  [QUESTION_ID] VARCHAR(100),--primary key
  [CONTENT] NVARCHAR(2000),
  [AUDIO_LINK] VARCHAR(1000),
  [IMAGE_LINK] VARCHAR(1000),
  [CORRECT_ANSWER_ID] VARCHAR(100),
  [QUESTION_TYPE_ID] NVARCHAR(100),
  [PART_DETAIL_ID] VARCHAR(100),
  [GRAMMAR_ID] VARCHAR(100),
  [EXPLANATION] NVARCHAR(1000),
  [QUESTION_CONTENT_ID] VARCHAR(100)
  CONSTRAINT [FK_QUESTION.QUESTION_TYPE_ID]
    FOREIGN KEY ([QUESTION_TYPE_ID])
      REFERENCES [QUESTION_TYPE]([QUESTION_TYPE_ID]),
  CONSTRAINT [FK_QUESTION.GRAMMAR_ID]
    FOREIGN KEY ([GRAMMAR_ID])
      REFERENCES [GRAMMAR]([GRAMMAR_ID]),
  CONSTRAINT [FK_QUESTION.QUESTION_ID]
    FOREIGN KEY ([QUESTION_CONTENT_ID])
      REFERENCES [QUESTION_CONTENT]([QUESTION_CONTENT_ID]),
  CONSTRAINT [FK_QUESTION.QUESTION_ID]
    FOREIGN KEY ([QUESTION_ID])
      REFERENCES [VOCAB_QUESTION]([QUESTION_ID])
);

CREATE TABLE [ANSWER] (
  [ANSWER_ID] VARCHAR(100),--primary key
  [CONTENT] NVARCHAR(200),
  [IMAGE_LINK] VARCHAR(1000),
  [AUDIO_LINK] VARCHAR(1000),
  [QUESTION_ID] VARCHAR(100),
  CONSTRAINT [FK_ANSWER.QUESTION_ID]
    FOREIGN KEY ([QUESTION_ID])
      REFERENCES [QUESTION]([QUESTION_ID])
);

CREATE TABLE [USER_TEST] (
  [USER_ID] VARCHAR(100),--primary key
  [TEST_ID] VARCHAR(100),--primary key
  [TEST_DATE] DATETIME,--primary key
  [SCORE] FLOAT,
  [DURATION] INT
);

CREATE TABLE [LESSON_PROCESS] (
  [LESSON_ID] VARCHAR(100),--primary key
  [USER_ID] VARCHAR(100),--primary key
  [DATE_LEARN] DATETIME,
  [IS_PASSED] BIT,
  [LATEST_TIME_LEARN] DATETIME,
  [DURATION] INT,
  CONSTRAINT [FK_LESSON_PROCESS.USER_ID]
    FOREIGN KEY ([USER_ID])
      REFERENCES [USER]([USER_ID])
);

CREATE TABLE [USER_ANSWER] (
  [USER_ID] VARCHAR(100),--primary key
  [ANSWER _ID] VARCHAR(100),--primary key
  [RAW_USER_ANSWER] NVARCHAR(200),
  [USER_NOTE] NVARCHAR(100),
  CONSTRAINT [FK_USER_ANSWER.ANSWER _ID]
    FOREIGN KEY ([ANSWER _ID])
      REFERENCES [ANSWER]([ANSWER_ID]),
  CONSTRAINT [FK_USER_ANSWER.USER_ID]
    FOREIGN KEY ([USER_ID])
      REFERENCES [USER]([USER_ID])
);

CREATE TABLE [USER_FAVOUR_TOPIC] (
  [USER_ID] VARCHAR(100),--primary key
  [TOPIC_ID] NVARCHAR(2000)--primary key
);

CREATE TABLE [PART_DETAIL] (
  [PART_OF_TEST_ID] VARCHAR(100),--primary key
  [TEST_ID] NVARCHAR(2000),
  [PART_DETAIL_ID] VARCHAR(100),
  CONSTRAINT [FK_PART_DETAIL.PART_OF_TEST_ID]
    FOREIGN KEY ([PART_OF_TEST_ID])
      REFERENCES [PART_OF_TEST]([PART_OF_TEST_ID]),
  CONSTRAINT [FK_PART_DETAIL.PART_DETAIL_ID]
    FOREIGN KEY ([PART_DETAIL_ID])
      REFERENCES [QUESTION]([PART_DETAIL_ID]),
  CONSTRAINT [FK_PART_DETAIL.TEST_ID]
    FOREIGN KEY ([TEST_ID])
      REFERENCES [TEST]([TEST_ID])
);

ALTER TABLE [CERT_LEVEL]
ADD CONSTRAINT PK_CERT_LEVEL PRIMARY KEY ([CERT_LEVEL_ID]);

ALTER TABLE [TEST_TYPE]
ADD CONSTRAINT PK_TEST_TYPE PRIMARY KEY ([TEST_TYPE_ID]);

ALTER TABLE [PART_OF_TEST]
ADD CONSTRAINT PK_PART_OF_TEST PRIMARY KEY ([PART_OF_TEST_ID]);

ALTER TABLE [QUESTION_CONTENT]
ADD CONSTRAINT PK_QUESTION_CONTENT PRIMARY KEY ([QUESTION_ID]);

ALTER TABLE [PART_QUESTION_TYPE]
ADD CONSTRAINT PK_PART_QUESTION_TYPE PRIMARY KEY ([QUESTION_TYPE_ID], [PART_OF_TEST_ID]);

ALTER TABLE [TEST]
ADD CONSTRAINT PK_TEST PRIMARY KEY ([TEST_ID]);

ALTER TABLE [USER]
ADD CONSTRAINT PK_USER PRIMARY KEY ([USER_ID]);

ALTER TABLE [DATE_ATTENDING]
ADD CONSTRAINT PK_DATE_ATTENDING PRIMARY KEY ([DATE_ATTEND], [USER_ID]);

ALTER TABLE [TOPIC]
ADD CONSTRAINT PK_TOPIC PRIMARY KEY ([TOPIC_ID]);

ALTER TABLE [GRAMMAR]
ADD CONSTRAINT PK_GRAMMAR PRIMARY KEY ([GRAMMAR_ID]);

ALTER TABLE [LESSON]
ADD CONSTRAINT PK_LESSON PRIMARY KEY ([LESSON_ID]);

ALTER TABLE [USER_VOCAB]
ADD CONSTRAINT PK_USER_VOCAB PRIMARY KEY ([USER_ID], [VOCAB_ID]);

ALTER TABLE [VOCABULARY]
ADD CONSTRAINT PK_VOCABULARY PRIMARY KEY ([VOCAB_ID]);

ALTER TABLE [VOCAB_QUESTION]
ADD CONSTRAINT PK_VOCAB_QUESTION PRIMARY KEY ([QUESTION_ID], [VOCAB_ID]);

ALTER TABLE [QUESTION_TYPE]

ADD CONSTRAINT PK_QUESTION_TYPE PRIMARY KEY ([QUESTION_TYPE_ID]);

ALTER TABLE [QUESTION]
ADD CONSTRAINT PK_QUESTION PRIMARY KEY ([QUESTION_ID]);

ALTER TABLE [ANSWER]
ADD CONSTRAINT PK_ANSWER PRIMARY KEY ([ANSWER_ID]);

ALTER TABLE [USER_TEST]
ADD CONSTRAINT PK_USER_TEST PRIMARY KEY ([USER_ID], [TEST_ID], [TEST_DATE]);

ALTER TABLE [LESSON_PROCESS]
ADD CONSTRAINT PK_LESSON_PROCESS PRIMARY KEY ([LESSON_ID], [USER_ID]);

ALTER TABLE [USER_ANSWER]
ADD CONSTRAINT PK_USER_ANSWER PRIMARY KEY ([USER_ID], [ANSWER _ID]);

ALTER TABLE [USER_FAVOUR_TOPIC]
ADD CONSTRAINT PK_USER_FAVOUR_TOPIC PRIMARY KEY ([USER_ID], [TOPIC_ID]);

ALTER TABLE [PART_DETAIL]
ADD CONSTRAINT PK_PART_DETAIL PRIMARY KEY ([PART_OF_TEST_ID], [PART_DETAIL_ID]);